language: cpp
#git:
# shorten this if we can nail down submodule depth
#  depth: 3

matrix:
  allow_failures:
    - env: ALLOW_FAILURES=true

  include:
    - name: Ubuntu 18.04
      os: linux
      dist: bionic

    - name: Ubuntu 16.04
      os: linux
      dist: xenial
      
      
    - name: Windows 10
      os: windows
      env:
        - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
        - PATH_FIX="C:\Windows\System32"  # Hack to use correct Find.exe in Travis, see https://github.com/microsoft/AirSim/issues/1753
        

    # OS X CMake
    #- os: osx
    #  sudo: required
    #  osx_image: xcode8.2
    #  compiler:
    #    - clang
    #  env:
    #    - TOOL="cmake"
    #    - DESCRIPTION="OS X build/test via CMake"


before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-get -y install git wget unzip;
      sudo apt-get -y install build-essential software-properties-common cmake rsync;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$TOOL" == "cmake" ]]; then
      echo "No pre-install osx actions";
    fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      ./setup.sh;
      ./build.sh;
    elif [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      export PATH=$MSBUILD_PATH:$PATH_FIX:$PATH;
      cmd.exe /C '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 &&
      build.cmd && 
      cd Unity && build.cmd';
    elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      git submodule update --init --recursive;
      ./setup.sh;
      ./build.sh;
    fi
